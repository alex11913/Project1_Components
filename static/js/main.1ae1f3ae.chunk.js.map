{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAKaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCRbC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCHdM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAYC,EAAf,EAAeA,aAAf,OACrB,uBACEZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCDG,E,kDAlCb,aAAc,IAAD,8BACX,gBAGKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IANJ,E,qDAUf,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAGxC,WAAS,IAAD,SAC6BE,KAAKR,MAA/BR,EADH,EACGA,SAAUS,EADb,EACaA,YACbQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAEpD,OACE,sBAAK3B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAE1D,cAAC,EAAD,CAAUvB,SAAYiB,W,GA7BVO,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ae1f3ae.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css'\n\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img \n        alt='monster'\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        />\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n);","import React from 'react';\nimport { Card } from '../card/card.component'\nimport './card-list.styles.css'\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster}/>\n    ))}\n    </div>\n); ","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder,handleChange }) => (\n    <input\n      className = 'search' \n      type=\"search\" \n      placeholder={placeholder}\n      onChange={handleChange}\n      />\n)","import './App.css';\n\nimport { CardList } from './components/card-list/card-list.component'\n\nimport { SearchBox } from './components/search-box/search-box.component'\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monsters: users}));\n}\n\n  render(){\n    const  { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n  return (\n    <div className=\"App\">\n      <h1> Monsters Rolodex </h1>\n      <SearchBox \n        placeholder='search monsters'\n        handleChange={e => this.setState({searchField: e.target.value})}\n      />\n      <CardList monsters = {filteredMonsters} />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}